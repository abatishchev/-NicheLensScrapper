// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Rest;
using NicheLens.Scrapper.Api.Client;

namespace NicheLens.Scrapper.Api.Client
{
    public static partial class InfoExtensions
    {
        /// <param name='operations'>
        /// Reference to the NicheLens.Scrapper.Api.Client.IInfo.
        /// </param>
        public static string GetEnvironment(this IInfo operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IInfo)s).GetEnvironmentAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the NicheLens.Scrapper.Api.Client.IInfo.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<string> GetEnvironmentAsync(this IInfo operations, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<string> result = await operations.GetEnvironmentWithOperationResponseAsync(cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the NicheLens.Scrapper.Api.Client.IInfo.
        /// </param>
        public static string GetVersion(this IInfo operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IInfo)s).GetVersionAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the NicheLens.Scrapper.Api.Client.IInfo.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<string> GetVersionAsync(this IInfo operations, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<string> result = await operations.GetVersionWithOperationResponseAsync(cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
    }
}
